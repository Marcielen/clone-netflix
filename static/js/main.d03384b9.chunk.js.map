{"version":3,"sources":["Tmdb.js","Components/MovieRow.js","Components/FeaturedMovie.js","Components/Header.js","App.js","index.js"],"names":["API_KEY","basicFecth","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","src","poster_path","firstDate","Date","first_air_date","genres","i","push","name","descr","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","number_of_season","href","id","join","black","alt","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setblackHeader","useEffect","Tmdb","list","originals","filter","randonChosen","floor","random","chosen","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d03384b9.chunk.js","sourcesContent":["const API_KEY = '52310674691948284cb5de1fabc9a7da';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n/* -originals netflix\r\n-recomendados\r\n-Em alta (top rated)\r\n- ação\r\n- comédia  ````\r\n- terror\r\n- romance\r\n- documentário */\r\n\r\nconst basicFecth = async (endpoint) =>{\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\nexport default {\r\n    getHomeList: async () => {\r\n        return[\r\n            {\r\n                slug: 'originals',\r\n                title: 'originais do Netflix',\r\n                items : await basicFecth(`/discover/tv/?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para Você',\r\n                items : await basicFecth(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em alta',\r\n                items : await basicFecth(`/movie/top_rated?&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items : await basicFecth(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items : await basicFecth(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items : await basicFecth(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items : await basicFecth(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentário',\r\n                items : await basicFecth(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n        ];\r\n    },\r\n    getMovieInfo : async (movieId, type) =>{\r\n        let info = {};\r\n        if(movieId) {\r\n            switch(type){\r\n                case 'movei':\r\n                    info = await basicFecth(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                 case 'tv':\r\n                    info = await basicFecth(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                default:\r\n                    info = null;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return info;\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport \"./MovieRow.css\"\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nexport default ({title, items}) =>{\r\n\r\n    const [scrollX, setScrollX]= useState(0);\r\n\r\n    const handleLeftArrow = () => {\r\n        let x = scrollX + Math.round(window.innerWidth / 1);\r\n        if(x > 0){\r\n            x = 0;\r\n        }\r\n        setScrollX(x);\r\n    }\r\n    const handleRightArrow = () =>{\r\n        let x = scrollX - Math.round(window.innerWidth / 1);\r\n        let listW = items.results.length * 150;\r\n        if(window.innerWidth - listW > x)\r\n        {\r\n            x = (window.innerWidth - listW) - 60;\r\n        }\r\n        setScrollX(x);\r\n    }\r\n\r\n    return(\r\n        <div className=\"movieRow\">\r\n            <h2>{title}</h2>\r\n            <div className=\"movieRow-left\" onClick={handleLeftArrow}>\r\n                <NavigateBeforeIcon style={{fontSize:50}} />\r\n            </div>\r\n            <div className=\"movieRow-right\" onClick={handleRightArrow}>\r\n                <NavigateNextIcon style={{fontSize:50}} />\r\n            </div>\r\n\r\n            <div className=\"movieRow--listarea\">\r\n                <div className=\"movieRow--list\"style={{\r\n                    marginLeft :scrollX,\r\n                    width: items.results.length * 150\r\n                }}>\r\n                    {items.results.length > 0 && items.results.map((item, key)=>(\r\n                        <div key={key} className=\"movieRow--item\">    \r\n                            <img  src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport \"./FeaturedMovie.css\";\r\n\r\nexport default ({item}) => {\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n\r\n    let genres = [];\r\n    for(let i in item.genres){\r\n        genres.push(item.genres[i].name);\r\n    }\r\n\r\n    let descr = item.overview;\r\n    if(descr.length > 200){\r\n        descr = descr.substring(0, 200)  + '...';\r\n    }\r\n\r\n    return(\r\n        <section className=\"featured\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`,\r\n        }}>\r\n            <div className=\"featured--vertival\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--name\">{item.original_name}</div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                        <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_season !== 1 ? 's' : ''}</div>\r\n                    </div>\r\n                        <div className=\"featured--description\">{descr}</div>\r\n                        <div className=\"featured--buttons\">\r\n                            <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">► Assistir</a>\r\n                            <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">+ Minha Lista</a>\r\n                        </div>\r\n                        <div className=\"featured--genres\">Gêneros: <strong> {genres.join(', ')} </strong></div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}","import React from 'react';\r\nimport './Header.css'\r\n\r\nexport default ({black}) => {\r\n    return(\r\n        <header className={black ? 'black' : ''}>\r\n            <div className=\"header--logo\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://images-na.ssl-images-amazon.com/images/I/21SEo9itttL.jpg\" />\r\n                </a>\r\n            </div>\r\n            <div className=\"header--user\">\r\n            <a href=\"/\">\r\n                    <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"usuário\" />\r\n                </a>\r\n            </div>\r\n        </header>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Tmdb from './Tmdb';\r\nimport MovieRow from './Components/MovieRow';\r\nimport FeaturedMovie from './Components/FeaturedMovie';\r\nimport Header from './Components/Header';\r\n\r\nexport default() => {\r\n\r\n    const [movieList, setMovieList ] = useState([]);\r\n    const [featuredData, setFeaturedData] = useState(null);\r\n    const [blackHeader, setblackHeader] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        const loadAll = async () => {\r\n            let list = await Tmdb.getHomeList();\r\n            setMovieList(list);\r\n\r\n            let originals = list.filter(i=> i.slug === 'originals');\r\n            let randonChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\r\n            let chosen = originals[0].items.results[randonChosen];\r\n            let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\r\n            setFeaturedData(chosenInfo);\r\n        }\r\n\r\n        loadAll();\r\n\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        const scrollListener = () =>{\r\n            if(window.scrollY > 50){\r\n              setblackHeader(true);\r\n            }else{\r\n              setblackHeader(false);\r\n            }\r\n        }\r\n    \r\n        window.addEventListener('scroll', scrollListener);\r\n    \r\n        return () =>{\r\n          window.removeEventListener('scroll', scrollListener);\r\n        }\r\n    }, []);\r\n    \r\n\r\n    return (\r\n        <div className=\"page\">\r\n\r\n            <Header black={blackHeader} />\r\n\r\n            {featuredData &&\r\n                <FeaturedMovie item={featuredData} />\r\n            }\r\n\r\n            <section className=\"lists\">\r\n                {movieList.map((item, key)=>(\r\n                    <MovieRow key={key} title={item.title} items={item.items}></MovieRow>\r\n                ))}\r\n            </section>\r\n\r\n            <footer>\r\n                Criado por Marcielen Barbosa ❤️<br/>\r\n                Direitos de imagem para Netflix <br/>\r\n                Dados pegos do site Themoviedb.org\r\n                \r\n            </footer>\r\n\r\n            {movieList.length <= 0 &&\r\n                <div className=\"loading\">\r\n                    <img src=\"https://cdn.lowgif.com/small/0534e2a412eeb281-the-counterintuitive-tech-behind-netflix-s-worldwide.gif\" alt=\"loading\"></img>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}